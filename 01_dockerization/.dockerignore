# .dockerignore file
# This file tells Docker which files and directories to exclude when building the image
# Excluding unnecessary files reduces build context size and speeds up builds

# Python cache files and directories
# These are generated at runtime and not needed in the image
__pycache__/
*.py[cod]
*$py.class
*.pyc
*.pyo
*.pyd
.Python

# Virtual environment directories
# We create a fresh venv in the Docker image, so exclude local ones
venv/
env/
ENV/
.venv

# IDE and editor files
# Development environment files that aren't needed in production
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store

# Git files
# Version control files not needed in the Docker image
.git/
.gitignore
.gitattributes

# Documentation files
# These are for developers, not needed at runtime
README.md
*.md
docs/

# Test files and directories
# Testing code not needed in production image
tests/
test_*.py
*_test.py
.pytest_cache/
.coverage
htmlcov/
.tox/

# Development and build files
# Build artifacts and development configurations
*.egg-info/
dist/
build/
*.egg
.eggs/

# Jupyter Notebook files
# Development notebooks not needed in production
*.ipynb
.ipynb_checkpoints/

# Environment files with secrets
# Never include files that might contain sensitive information
.env
.env.*
*.env

# Log files
# Logs should be generated fresh in the container
*.log
logs/

# Database files
# Local database files shouldn't be in the image
*.db
*.sqlite
*.sqlite3

# Temporary files
# OS and application temporary files
tmp/
temp/
*.tmp

# Docker-related files
# Meta files about Docker itself
Dockerfile
docker-compose*.yml
.dockerignore

# CI/CD files
# Continuous integration configurations
.github/
.gitlab-ci.yml
.travis.yml
azure-pipelines.yml

# Package manager files (if not needed)
# Lock files are kept for reproducibility, but these can be excluded
poetry.lock
Pipfile.lock

# MacOS specific files
.DS_Store
.AppleDouble
.LSOverride

# Windows specific files
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux specific files
.directory
.Trash-*